@* Razor syntax for setting the page title *@
@{
    ViewData["Title"] = "Home Page";
}
@*Initiate Model *@
@model IEnumerable<Weekly_Weather.Models.Location>;


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>@ViewData["Title"]</title>
    <!--jQuery UI -->
    <link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.13.2/themes/smoothness/jquery-ui.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script defer src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.13.2/jquery-ui.min.js"></script>
    <!-- Autocomplete Custom Script -->
    <script defer src="js/autocomplete.js"></script>
    <link rel="stylesheet" href="~/css/weather-icons.css">

</head>

<body>
    <!-- Page Header -->
    <div class="text-center">
        <h1 class="display-4">Weekly Weather</h1>
    </div>
    <!-- Search Bar with Autocomplete -->
    <div class="search-bar">
        <input type="text" id="addressSearch" placeholder="Enter a City">
        <button class="Add" onclick="geocodeAddress()">Add</button>
    </div>
    <br />

    @*
    Map Display 
    <div id="map" class="map" style="width: 100%; height: 500px;"></div>
    <script src="https://cdn.rawgit.com/openlayers/openlayers.github.io/master/en/v6.5.0/build/ol.js"></script>
    <script>
    // JavaScript code for initializing the map
    </script>
    *@

    <!-- Weather Code Maps -->
    @{
        //Mapping Dictionary for weathercode Icons
        var weatherCodeToIconMap = new Dictionary<int, string>
        {
    { 0, "wi-cloudy" }, { 1, "wi-cloudy" }, { 2, "wi-cloudy" }, { 3, "wi-cloudy" }, { 4, "wi-smog" }, { 5, "wi-fog" }, { 6, "wi-dust" }, { 7, "wi-sandstorm" }, { 8, "wi-sandstorm" }, { 9, "wi-sandstorm" },
    { 10, "wi-fog" }, { 11, "wi-fog" }, { 12, "wi-fog" }, { 13, "wi-lightning" },{ 14, "wi-cloudy" }, { 15, "wi-cloudy" }, { 16, "wi-cloudy" }, { 17, "wi-thunderstorm" }, { 18, "wi-strong-wind" }, { 19, "wi-tornado" },
    { 20, "wi-sprinkle" }, { 21, "wi-rain" }, { 22, "wi-snow" }, { 23, "wi-sleet" }, { 24, "wi-rain-mix" }, { 25, "wi-rain" }, { 26, "wi-rain-mix" }, { 27, "wi-hail" }, { 28, "wi-fog" }, { 29, "wi-thunderstorm" },
    { 30, "wi-sandstorm" }, { 31, "wi-sandstorm" }, { 32, "wi-sandstorm" }, { 33, "wi-sandstorm" }, { 34, "wi-sandstorm" }, { 35, "wi-sandstorm" }, { 36, "wi-snow" }, { 37, "wi-snow" }, { 38, "wi-snow" }, { 39, "wi-snow" },
    { 40, "wi-fog" }, { 41, "wi-fog" }, { 42, "wi-fog" }, { 43, "wi-fog" }, { 44, "wi-fog" }, { 45, "wi-fog" }, { 46, "wi-fog" }, { 47, "wi-fog" }, { 48, "wi-fog" }, { 49, "wi-fog" },
    { 50, "wi-sprinkle" }, { 51, "wi-sprinkle" }, { 52, "wi-sprinkle" }, { 53, "wi-sprinkle" }, { 54, "wi-sprinkle" }, { 55, "wi-sprinkle" }, { 56, "wi-sleet" }, { 57, "wi-sleet" }, { 58, "wi-sprinkle" }, { 59, "wi-sprinkle" },
    { 60, "wi-rain" }, { 61, "wi-rain" }, { 62, "wi-rain" }, { 63, "wi-rain" }, { 64, "wi-rain" }, { 65, "wi-rain" }, { 66, "wi-sleet" }, { 67, "wi-sleet" }, { 68, "wi-rain-mix" }, { 69, "wi-rain-mix" },
    { 70, "wi-snow" }, { 71, "wi-snow" }, { 72, "wi-snow" }, { 73, "wi-snow" }, { 74, "wi-snow" }, { 75, "wi-snow" }, { 76, "wi-snow" }, { 77, "wi-snow" }, { 78, "wi-snow" }, { 79, "wi-snow" },
    { 80, "wi-rain" }, { 81, "wi-rain" }, { 82, "wi-rain" }, { 83, "wi-rain-mix" }, { 84, "wi-rain-mix" }, { 85, "wi-rain-mix" }, { 86, "wi-rain-mix" }, { 87, "wi-hail" }, { 88, "wi-hail" }, { 89, "wi-hail" },
    { 90, "wi-hail" }, { 91, "wi-thunderstorm" }, { 92, "wi-rain" }, { 93, "wi-rain-mix" }, { 94, "wi-rain-mix" }, { 95, "wi-thunderstorm" }, { 96, "wi-thunderstorm" }, { 97, "wi-thunderstorm" }, { 98, "wi-thunderstorm" }, { 99, "wi-thunderstorm" }
        };
        //Mapping Dictionary for WMO Weather Code Description
        var WMOCodetoDescriptionMap = new Dictionary<int, string>
        {
    { 00, "Cloudy" }, { 01, "Cloudy" }, { 02, "Cloudy" }, { 03, "Cloudy" }, { 04, "Smoke/Smog" }, { 05, "Haze" }, { 06, "Duststorm" }, { 07, "Duststorm" }, { 08, "Duststorm" }, { 09, "Duststorm" },
    { 10, "Mist" }, { 11, "Fog" }, { 12, "Fog" }, { 13, "Lightning" }, { 14, "Cloudy" }, { 15, "Cloudy" }, { 16, "Cloudy" }, { 17, "Thunderstorm" }, { 18, "Squalls" }, { 19, "Funnel Clouds" },
    { 20, "Drizzle" }, { 21, "Rain" }, { 22, "Snow" }, { 23, "Rain/Snow" }, { 24, "Freezing Rain" }, { 25, "Showers" }, { 26, "Rain and Snow" }, { 27, "Hail" }, { 28, "Fog" }, { 29, "Thunderstorm" },
    { 30, "Duststorm" }, { 31, "Duststorm" }, { 32, "Duststorm" }, { 33, "Duststorm" }, { 34, "Duststorm" }, { 35, "Duststorm" }, { 36, "Snow" }, { 37, "Snow" }, { 38, "Snow" }, { 39, "Snow" },
    { 40, "Fog" }, { 41, "Fog" }, { 42, "Fog" }, { 43, "Fog" }, { 44, "Fog" }, { 45, "Fog" }, { 46, "Fog" }, { 47, "Fog" }, { 48, "Fog" }, { 49, "Fog" },
    { 50, "Drizzle" }, { 51, "Drizzle" }, { 52, "Drizzle" }, { 53, "Drizzle" }, { 54, "Drizzle" }, { 55, "Drizzle" }, { 56, "Freezing Drizzle" }, { 57, "Freezing Drizzle" }, { 58, "Freezing Drizzle" }, { 59, "Rain" },
    { 60, "Rain" }, { 61, "Rain" }, { 62, "Rain" }, { 63, "Rain" }, { 64, "Rain" }, { 65, "Rain" }, { 66, "Freezing Rain" }, { 67, "Freezing Rain" }, { 68, "Rain/Snow" }, { 69, "Rain/Snow" },
    { 70, "Snow" }, { 71, "Snow" }, { 72, "Snow" }, { 73, "Snow" }, { 74, "Snow" }, { 75, "Snow" }, { 76, "Snow" }, { 77, "Snow" }, { 78, "Snow" }, { 79, "Snow" },
    { 80, "Showers" }, { 81, "Showers" }, { 82, "Showers" }, { 83, "Showers" }, { 84, "Showers" }, { 85, "Rain/Snow" }, { 86, "Rain/Snow" }, { 87, "Rain/Snow" }, { 88, "Rain/Snow" }, { 89, "Hail" },
    { 90, "Hail" }, { 91, "Thunderstorm" }, { 92, "Thunderstorm" }, { 93, "Mixed Precip" }, { 94, "Mixed Precip" }, { 95, "Thunderstorm" }, { 96, "Thunderstorm" }, { 97, "Thunderstorm" }, { 98, "Thunderstorm" }, { 99, "Thunderstorm" }

        };
    }
    
    <div id="forecast-content">
    <!-- Display Weather Code -->
    @foreach (var location in Model)
    {
        <div class="forecast-display" data-city="@location.city" data-lat="@location.lat" data-lon="@location.lon">
            <h2 class="forecast-city"> @location.city, @location.state</h2>
            <button class="close" type="button" onclick="deleteLocation(@location.LocationId)">✖</button>

        </div>

        @if (location.forecast.Count > 0)
        {
            System.Diagnostics.Debug.AutoFlush = true;
            System.Diagnostics.Debug.WriteLine("Forecast Exists");
            System.Diagnostics.Debug.WriteLine(location.forecast);

            <div class="forecast-data">
                @for (int i = 0; i < 7; i++)
                {
                    var forecast = location.forecast[0];
                    <div class="forecast-day">
                        @{
                                int year = Int32.Parse(forecast.date_array[i].Substring(0, 4)); // Substring starting at index 0, length 4
                                int month = Int32.Parse(forecast.date_array[i].Substring(5, 2)); // Substring starting at index 5, length 2
                                int day = Int32.Parse(forecast.date_array[i].Substring(8, 2)); // Substring starting at index 8, length 2
                                DateTime dateValue = new DateTime(year,month,day);
                        }

                        <p>@dateValue.ToString("ddd")</p>
                        <p>@forecast.date_array[i].Substring(5,5)</p>
                        <hr>
                        <p>High </p>
                        <p>@forecast.temperature_2m_max_array[i] @forecast.temperature_2m_units</p>
                        <hr>
                        <p>Low </p>
                        <p>@forecast.temperature_2m_min_array[i] @forecast.temperature_2m_units</p>
                        <hr>
                        <p>@WMOCodetoDescriptionMap[@forecast.weather_code_array[i]]</p>
                        <i class="wi @weatherCodeToIconMap[@forecast.weather_code_array[i]]"></i>

                    </div>
                }
            </div>
            <br />
        }
    }
    </div>



</body>
</html>
